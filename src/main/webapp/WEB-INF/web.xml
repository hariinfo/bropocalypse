<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

  <display-name>statementcommerce</display-name>

  <!--
    - Location of the XML file that defines the root application context
    - Applied by ContextLoaderListener.
    -->
  <!--<context-param>-->
  <!--<param-name>contextConfigLocation</param-name>-->
  <!--<param-value>-->
  <!--classpath:applicationContext.xml-->
  <!--classpath:applicationContext-security.xml-->
  <!--</param-value>-->
  <!--</context-param>-->

  <!--
   Set the root application context to annotation based
  -->
  <context-param>
    <param-name>contextClass</param-name>
    <param-value>
      org.springframework.web.context.support.AnnotationConfigWebApplicationContext
    </param-value>
  </context-param>

  <!-- Configuration locations must consist of one or more comma- or space-delimited
       fully-qualified @Configuration classes. Fully-qualified packages may also be
       specified for component-scanning -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>com.nike.das</param-value>
  </context-param>


  <!--GZip Filter-->
  <!--<filter>-->
    <!--<filter-name>GzipFilter</filter-name>-->
    <!--<filter-class>org.mortbay.servlet.GzipFilter</filter-class>-->
    <!--<init-param>-->
      <!--<param-name>mimeTypes</param-name>-->
      <!--<param-value>application/json,text/html,text/plain,text/xml,application/xhtml+xml,text/css,application/javascript,image/svg+xml</param-value>-->
    <!--</init-param>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
    <!--<filter-name>GzipFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
  <!--</filter-mapping>-->

  <!--
    - Loads the root application context of this web app at startup.
  -->
  <!--<listener>-->
    <!--<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
  <!--</listener>-->

  <!--
    - Publishes events for session creation and destruction through the application
    - context. Optional unless concurrent session control is being used.
    -->
  <listener>
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  </listener>

  <!--
    - Provides core MVC application controller. See *-servlet.xml.
    -->
  <servlet>
    <servlet-name>ecomm</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>ecomm</servlet-name>
    <!--<url-pattern>*.html</url-pattern>-->
    <url-pattern>*.json</url-pattern>
  </servlet-mapping>

  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>

</web-app>
